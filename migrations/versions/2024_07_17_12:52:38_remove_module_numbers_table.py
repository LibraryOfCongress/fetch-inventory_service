"""Remove Module Numbers table

Revision ID: 2024_07_17_12:52:38
Revises: 2024_07_17_07:36:41
Create Date: 2024-07-17 16:52:38.749043

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "2024_07_17_12:52:38"
down_revision: Union[str, None] = "2024_07_17_07:36:41"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "modules",
        sa.Column(
            "module_number", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False
        ),
    )
    op.drop_constraint("uq_building_id_module_number_id", "modules", type_="unique")
    op.create_unique_constraint(None, "modules", ["module_number"])
    op.drop_constraint("modules_module_number_id_fkey", "modules", type_="foreignkey")
    op.drop_column("modules", "module_number_id")
    op.drop_table("module_numbers")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "modules",
        sa.Column(
            "module_number_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.create_foreign_key(
        "modules_module_number_id_fkey",
        "modules",
        "module_numbers",
        ["module_number_id"],
        ["id"],
    )
    op.drop_constraint(None, "modules", type_="unique")
    op.create_unique_constraint(
        "uq_building_id_module_number_id",
        "modules",
        ["building_id", "module_number_id"],
    )
    op.drop_column("modules", "module_number")
    op.create_table(
        "module_numbers",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("number", sa.SMALLINT(), autoincrement=False, nullable=False),
        sa.Column(
            "create_dt", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "update_dt", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint("id", name="module_numbers_pkey"),
        sa.UniqueConstraint("number", name="module_numbers_number_key"),
    )
    # ### end Alembic commands ###
