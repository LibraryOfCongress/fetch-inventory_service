"""distinguish_container_pos

Revision ID: 2024_04_15_18:05:21
Revises: 2024_04_15_11:44:30
Create Date: 2024-04-15 17:05:21.731477

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel



# revision identifiers, used by Alembic.
revision: str = '2024_04_15_18:05:21'
down_revision: Union[str, None] = '2024_04_15_11:44:30'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint("uq_non_tray_proposed_position", 'non_tray_items', ['shelf_position_proposed_id'])
    op.drop_constraint('fk_nontray_shelf_proposed_position_id', 'non_tray_items', type_='foreignkey')
    op.create_unique_constraint("uq_tray_proposed_position", 'trays', ['shelf_position_proposed_id'])
    op.drop_constraint('fk_tray_proposed_pos', 'trays', type_='foreignkey')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key('fk_tray_proposed_pos', 'trays', 'shelf_positions', ['shelf_position_proposed_id'], ['id'])
    op.drop_constraint("uq_tray_proposed_position", 'trays', type_='unique')
    op.create_foreign_key('fk_nontray_shelf_proposed_position_id', 'non_tray_items', 'shelf_positions', ['shelf_position_proposed_id'], ['id'])
    op.drop_constraint("uq_non_tray_proposed_position", 'non_tray_items', type_='unique')
    # ### end Alembic commands ###
