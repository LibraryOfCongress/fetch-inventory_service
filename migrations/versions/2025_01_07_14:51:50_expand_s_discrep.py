"""expand_s_discrep

Revision ID: 2025_01_07_14:51:50
Revises: 2024_12_21_23:24:21
Create Date: 2025-01-07 14:51:50.170263

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel



# revision identifiers, used by Alembic.
revision: str = '2025_01_07_14:51:50'
down_revision: Union[str, None] = '2024_12_21_23:24:21'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('shelving_job_discrepancies', sa.Column('owner_id', sa.Integer(), nullable=True))
    op.add_column('shelving_job_discrepancies', sa.Column('size_class_id', sa.Integer(), nullable=True))
    op.add_column('shelving_job_discrepancies', sa.Column('assigned_location', sqlmodel.sql.sqltypes.AutoString(length=175), nullable=True))
    op.add_column('shelving_job_discrepancies', sa.Column('pre_assigned_location', sqlmodel.sql.sqltypes.AutoString(length=175), nullable=True))
    op.create_foreign_key("fk_s_d_size_class", 'shelving_job_discrepancies', 'size_class', ['size_class_id'], ['id'])
    op.create_foreign_key("fk_s_d_owner_id", 'shelving_job_discrepancies', 'owners', ['owner_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("fk_s_d_size_class", 'shelving_job_discrepancies', type_='foreignkey')
    op.drop_constraint("fk_s_d_owner_id", 'shelving_job_discrepancies', type_='foreignkey')
    op.drop_column('shelving_job_discrepancies', 'pre_assigned_location')
    op.drop_column('shelving_job_discrepancies', 'assigned_location')
    op.drop_column('shelving_job_discrepancies', 'size_class_id')
    op.drop_column('shelving_job_discrepancies', 'owner_id')
    # ### end Alembic commands ###
