"""Adding location generation

Revision ID: 2024_10_16_12:33:26
Revises: 2024_10_01_18:24:22
Create Date: 2024-10-16 16:33:26.011858

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "2024_10_16_12:33:26"
down_revision: Union[str, None] = "2024_10_01_18:24:22"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.add_column(
        "shelf_positions",
        sa.Column(
            "location", sqlmodel.sql.sqltypes.AutoString(length=75), nullable=True
        ),
    )
    op.add_column(
        "shelf_positions",
        sa.Column(
            "internal_location",
            sqlmodel.sql.sqltypes.AutoString(length=100),
            nullable=True,
        ),
    )
    op.create_unique_constraint(
        "uq_shelf_positions_location", "shelf_positions", ["location"]
    )
    op.create_unique_constraint(
        "uq_shelf_positions_internal_location", "shelf_positions", ["internal_location"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "uq_shelf_positions_internal_location", "shelf_positions", type_="unique"
    )
    op.drop_constraint("uq_shelf_positions_location", "shelf_positions", type_="unique")
    op.drop_column("shelf_positions", "internal_location")
    op.drop_column("shelf_positions", "location")
    # ### end Alembic commands ###
