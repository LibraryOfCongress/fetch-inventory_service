"""Updating size class table

Revision ID: 2024_02_23_18:28:49
Revises: 2024_02_06_12:41:18
Create Date: 2024-02-23 23:28:49.289971

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "2024_02_23_18:28:49"
down_revision: Union[str, None] = "2024_02_17_21:05:55"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "size_class",
        sa.Column("id", sa.SmallInteger(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=25), nullable=False),
        sa.Column(
            "short_name", sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False
        ),
        sa.Column("update_dt", sa.DateTime(), nullable=False),
        sa.Column("create_dt", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
        sa.UniqueConstraint("short_name"),
    )

    op.add_column("items", sa.Column("size_class_id", sa.Integer(), nullable=True))
    op.drop_constraint("fk_items_size_class_id", "items", type_="foreignkey")
    op.create_foreign_key(None, "items", "size_class", ["size_class_id"], ["id"])
    op.drop_column("items", "tray_size_class_id")
    op.add_column(
        "non_tray_items", sa.Column("size_class_id", sa.Integer(), nullable=True)
    )
    op.drop_constraint(
        "non_tray_items_tray_size_class_id_fkey", "non_tray_items", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "non_tray_items", "size_class", ["size_class_id"], ["id"]
    )
    op.drop_column("non_tray_items", "tray_size_class_id")
    op.add_column("shelves", sa.Column("size_class_id", sa.Integer(), nullable=False))
    op.drop_constraint("shelves_size_class_fk", "shelves", type_="foreignkey")
    op.create_foreign_key(None, "shelves", "size_class", ["size_class_id"], ["id"])
    op.drop_column("shelves", "tray_size_class_id")
    op.add_column("trays", sa.Column("size_class_id", sa.Integer(), nullable=False))
    op.drop_constraint("trays_size_class_fk", "trays", type_="foreignkey")
    op.create_foreign_key(None, "trays", "size_class", ["size_class_id"], ["id"])
    op.drop_column("trays", "tray_size_class_id")

    op.execute("DROP TABLE tray_size_class CASCADE")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "trays",
        sa.Column(
            "tray_size_class_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(None, "trays", type_="foreignkey")
    op.create_foreign_key(
        "trays_size_class_fk",
        "trays",
        "tray_size_class",
        ["tray_size_class_id"],
        ["id"],
    )
    op.drop_column("trays", "size_class_id")
    op.add_column(
        "shelves",
        sa.Column(
            "tray_size_class_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(None, "shelves", type_="foreignkey")
    op.create_foreign_key(
        "shelves_size_class_fk",
        "shelves",
        "tray_size_class",
        ["tray_size_class_id"],
        ["id"],
    )
    op.drop_column("shelves", "size_class_id")
    op.add_column(
        "non_tray_items",
        sa.Column(
            "tray_size_class_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
    )
    op.drop_constraint(None, "non_tray_items", type_="foreignkey")
    op.create_foreign_key(
        "non_tray_items_tray_size_class_id_fkey",
        "non_tray_items",
        "tray_size_class",
        ["tray_size_class_id"],
        ["id"],
    )
    op.drop_column("non_tray_items", "size_class_id")
    op.add_column(
        "items",
        sa.Column(
            "tray_size_class_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
    )
    op.drop_constraint(None, "items", type_="foreignkey")
    op.create_foreign_key(
        "fk_items_size_class_id",
        "items",
        "tray_size_class",
        ["tray_size_class_id"],
        ["id"],
    )
    op.drop_column("items", "size_class_id")
    op.create_table(
        "tray_size_class",
        sa.Column(
            "id",
            sa.SMALLINT(),
            server_default=sa.text("nextval('tray_size_class_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=25), autoincrement=False, nullable=False),
        sa.Column(
            "update_dt", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "create_dt", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint("id", name="tray_size_class_pkey"),
        sa.UniqueConstraint("name", name="tray_size_class_name_key"),
    )
    op.drop_table("size_class")
    # ### end Alembic commands ###
