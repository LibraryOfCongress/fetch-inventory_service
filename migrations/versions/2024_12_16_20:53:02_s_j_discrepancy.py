"""s_j_discrepancy

Revision ID: 2024_12_16_20:53:02
Revises: 2024_12_16_19:34:01
Create Date: 2024-12-16 20:53:02.484079

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel



# revision identifiers, used by Alembic.
revision: str = '2024_12_16_20:53:02'
down_revision: Union[str, None] = '2024_12_16_19:34:01'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('shelving_job_discrepancies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shelving_job_id', sa.Integer(), nullable=False),
    sa.Column('tray_id', sa.Integer(), nullable=True),
    sa.Column('non_tray_item_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('error', sqlmodel.sql.sqltypes.AutoString(length=350), nullable=True),
    sa.Column('create_dt', sa.DateTime(), nullable=True),
    sa.Column('update_dt', sa.DateTime(), nullable=True),
    sa.CheckConstraint('(tray_id IS NOT NULL) OR (non_tray_item_id IS NOT NULL)', name='ck_s_discrepancy_tray_xor_non_tray'),
    sa.ForeignKeyConstraint(['non_tray_item_id'], ['non_tray_items.id'], ),
    sa.ForeignKeyConstraint(['shelving_job_id'], ['shelving_jobs.id'], ),
    sa.ForeignKeyConstraint(['tray_id'], ['trays.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('shelving_job_discrepancies')
    # ### end Alembic commands ###
