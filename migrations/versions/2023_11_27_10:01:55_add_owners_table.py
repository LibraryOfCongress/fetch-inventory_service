"""Add owners table

Revision ID: 2023_11_27_10:01:55
Revises: 2023_11_24_12:19:22
Create Date: 2023-11-27 09:01:55.474050

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel



# revision identifiers, used by Alembic.
revision: str = '2023_11_27_10:01:55'
down_revision: Union[str, None] = '2023_11_24_12:19:22'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('owner_tiers',
    sa.Column('id', sa.SmallInteger(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('create_dt', sa.DateTime(), nullable=False),
    sa.Column('update_dt', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('level'),
    sa.UniqueConstraint('name')
    )
    op.create_table('owners',
    sa.Column('id', sa.SmallInteger(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('owner_tier_id', sa.Integer(), nullable=False),
    sa.Column('create_dt', sa.DateTime(), nullable=False),
    sa.Column('update_dt', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_tier_id'], ['owner_tiers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'owner_tier_id', name='uq_name_owner_tier_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('owners')
    op.drop_table('owner_tiers')
    # ### end Alembic commands ###
