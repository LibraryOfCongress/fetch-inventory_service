"""Added MoveDiscrepancy table

Revision ID: 2025_04_21_12:28:43
Revises: 7765c78711f7
Create Date: 2025-04-21 16:28:43.644008

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '2025_04_21_12:28:43'
down_revision: Union[str, None] = '7765c78711f7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "move_discrepancies",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("tray_id", sa.Integer(), nullable=True),
        sa.Column("item_id", sa.Integer(), nullable=True),
        sa.Column("non_tray_item_id", sa.Integer(), nullable=True),
        sa.Column("container_type_id", sa.Integer(), nullable=True),
        sa.Column("assigned_user_id", sa.Integer(), nullable=True),
        sa.Column("owner_id", sa.Integer(), nullable=True),
        sa.Column("size_class_id", sa.Integer(), nullable=True),
        sa.Column("original_assigned_location", sa.VARCHAR(length=175), nullable=True),
        sa.Column("current_assigned_location", sa.VARCHAR(length=175), nullable=True),
        sa.Column("error", sa.VARCHAR(length=350), nullable=True),
        sa.Column("create_dt", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("update_dt", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.CheckConstraint(
            "(tray_id IS NOT NULL) OR (non_tray_item_id IS NOT NULL) OR (item_id IS NOT NULL)",
            name="ck_s_discrepancy_tray_item_xor_non_tray",
        ),
        sa.ForeignKeyConstraint(
            ["assigned_user_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["container_type_id"],
            ["container_types.id"],
        ),
        sa.ForeignKeyConstraint(
            ["item_id"],
            ["items.id"],
        ),
        sa.ForeignKeyConstraint(
            ["non_tray_item_id"],
            ["non_tray_items.id"],
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["owners.id"],
        ),
        sa.ForeignKeyConstraint(
            ["size_class_id"],
            ["size_class.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tray_id"],
            ["trays.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("move_discrepancies")
    # ### end Alembic commands ###
#
