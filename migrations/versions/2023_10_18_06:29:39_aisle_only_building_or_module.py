"""aisle only building or module

Revision ID: 2023_10_18_06:29:39
Revises: 2023_10_16_10:18:17
Create Date: 2023-10-18 05:29:39.858829

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel



# revision identifiers, used by Alembic.
revision: str = '2023_10_18_06:29:39'
down_revision: Union[str, None] = '2023_10_16_10:18:17'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('aisles', 'building_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('modules', 'module_number_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.execute('ALTER TABLE aisles ADD CONSTRAINT ck_building_xor_module CHECK ((module_id IS NULL AND building_id IS NOT NULL) OR (building_id IS NULL AND module_id IS NOT NULL));')
    # ### end Alembic commands ###

# constraint ck_only_one check ((col1 is null and col2 is not null) or (col2 is null and col1 is not null)); 

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('modules', 'module_number_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('aisles', 'building_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.execute('ALTER TABLE aisles DROP CONSTRAINT ck_building_xor_module;')
    # ### end Alembic commands ###
