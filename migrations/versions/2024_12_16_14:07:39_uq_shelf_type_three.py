"""uq_shelf_type_three

Revision ID: 2024_12_16_14:07:39
Revises: 2024_12_11_21:54:12
Create Date: 2024-12-16 14:07:39.880147

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel



# revision identifiers, used by Alembic.
revision: str = '2024_12_16_14:07:39'
down_revision: Union[str, None] = '2024_12_11_21:54:12'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint("item_withdrawn_barcode_id_gen", 'items', ['withdrawn_barcode_id'])
    op.create_unique_constraint("non_tray_item_withdrawn_barcode_id_gen", 'non_tray_items', ['withdrawn_barcode_id'])
    op.create_unique_constraint('uq_type_max_cap_size_class_shelf_type', 'shelf_types', ['type', 'max_capacity', 'size_class_id'])
    op.create_unique_constraint("tray_withdrawn_barcode_id_gen", 'trays', ['withdrawn_barcode_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("tray_withdrawn_barcode_id_gen", 'trays', type_='unique')
    op.drop_constraint('uq_type_max_cap_size_class_shelf_type', 'shelf_types', type_='unique')
    op.drop_constraint("non_tray_item_withdrawn_barcode_id_gen", 'non_tray_items', type_='unique')
    op.drop_constraint("item_withdrawn_barcode_id_gen", 'items', type_='unique')
    # ### end Alembic commands ###
