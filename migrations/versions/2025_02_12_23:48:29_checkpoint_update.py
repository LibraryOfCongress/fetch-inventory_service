"""checkpoint_update

Revision ID: 2025_02_12_23:48:29
Revises: 2025_02_08_19:01:09
Create Date: 2025-02-12 23:48:29.702571

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2025_02_12_23:48:29'
down_revision: Union[str, None] = '2025_02_08_19:01:09'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Increase timeout before running heavy operations
    op.execute(sa.text("SET statement_timeout = '10min';"))

    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('accession_jobs', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('accession_jobs_id_seq'::regclass)"))
    op.alter_column('accession_jobs', 'last_transition',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('accession_jobs', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('accession_jobs', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('aisle_numbers', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.SmallInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('aisle_numbers_id_seq'::regclass)"))
    op.alter_column('aisle_numbers', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('aisle_numbers', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('aisles', 'sort_priority',
               existing_type=sa.INTEGER(),
               type_=sa.SmallInteger(),
               existing_nullable=True)
    op.alter_column('aisles', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('aisles', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('barcode_types', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('barcode_types', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('barcodes', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('barcodes', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('batch_uploads', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('batch_uploads_id_seq'::regclass)"))
    op.alter_column('batch_uploads', 'file_size',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=True)
    op.alter_column('batch_uploads', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('batch_uploads', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('buildings', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.SmallInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('buildings_id_seq'::regclass)"))
    op.alter_column('buildings', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('buildings', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('container_types', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('container_types', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('conveyance_bins', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('conveyance_bins', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('delivery_locations', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('delivery_locations', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('group_permissions', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.SmallInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('groups', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.SmallInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('groups_id_seq'::regclass)"))
    op.alter_column('groups', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('groups', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('item_withdrawals', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('item_withdrawals', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('item_withdrawals', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('items', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('items_id_seq'::regclass)"))
    op.alter_column('items', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('items', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('items_retrieval_events', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('items_retrieval_events', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('items_retrieval_events', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('ladder_numbers', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('ladder_numbers', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('ladders', 'sort_priority',
               existing_type=sa.INTEGER(),
               type_=sa.SmallInteger(),
               existing_nullable=True)
    op.alter_column('ladders', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('ladders', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('media_types', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('media_types', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('modules', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('modules', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('non_tray_item_withdrawals', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('non_tray_item_withdrawals', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('non_tray_item_withdrawals', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('non_tray_items', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('non_tray_items_id_seq'::regclass)"))
    op.alter_column('non_tray_items', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('non_tray_items', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('non_tray_items_retrieval_events', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('non_tray_items_retrieval_events', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('non_tray_items_retrieval_events', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('owner_tiers', 'level',
               existing_type=sa.INTEGER(),
               type_=sa.SmallInteger(),
               existing_nullable=False)
    op.alter_column('owner_tiers', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('owner_tiers', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('owners', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('owners', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('permissions', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('permissions', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('pick_lists', 'last_transition',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('pick_lists', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('pick_lists', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('priorities', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('priorities', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('refile_items', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('refile_items', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('refile_items', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('refile_jobs', 'last_transition',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('refile_jobs', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('refile_jobs', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('refile_non_tray_items', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('refile_non_tray_items', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('refile_non_tray_items', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('request_types', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('request_types', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('requests', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('requests', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('shelf_numbers', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('shelf_numbers', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('shelf_position_numbers', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('shelf_position_numbers', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('shelf_positions', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('shelf_positions', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('shelf_types', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('shelf_types_id_seq'::regclass)"))
    op.alter_column('shelf_types', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('shelf_types', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('shelves', 'available_space',
               existing_type=sa.INTEGER(),
               type_=sa.SmallInteger(),
               existing_nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('shelves', 'sort_priority',
               existing_type=sa.INTEGER(),
               type_=sa.SmallInteger(),
               existing_nullable=True)
    op.alter_column('shelves', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('shelves', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('shelving_job_discrepancies', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('shelving_job_discrepancies', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('shelving_job_discrepancies', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('shelving_jobs', 'last_transition',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('shelving_jobs', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('shelving_jobs', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('side_orientations', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.SmallInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('side_orientations_id_seq'::regclass)"))
    op.alter_column('side_orientations', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('side_orientations', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('sides', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('sides', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('size_class', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('size_class', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('subcollections', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('subcollections_id_seq'::regclass)"))
    op.alter_column('subcollections', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('subcollections', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('tray_withdrawals', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('tray_withdrawals', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('tray_withdrawals', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('trays', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('trays_id_seq'::regclass)"))
    op.alter_column('trays', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('trays', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('user_groups', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.SmallInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('users', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('users', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('verification_changes', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('verification_changes', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('verification_changes', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('verification_jobs', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('verification_jobs_id_seq'::regclass)"))
    op.alter_column('verification_jobs', 'last_transition',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('verification_jobs', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('verification_jobs', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('withdraw_jobs', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('withdraw_jobs_id_seq'::regclass)"))
    op.alter_column('withdraw_jobs', 'last_transition',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('withdraw_jobs', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('withdraw_jobs', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('workflow', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('workflow', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # Increase timeout before running heavy operations
    op.execute(sa.text("SET statement_timeout = '10s';"))
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('workflow', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('workflow', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('withdraw_jobs', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('withdraw_jobs', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('withdraw_jobs', 'last_transition',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('withdraw_jobs', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('withdraw_jobs_id_seq'::regclass)"))
    op.alter_column('verification_jobs', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('verification_jobs', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('verification_jobs', 'last_transition',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('verification_jobs', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('verification_jobs_id_seq'::regclass)"))
    op.alter_column('verification_changes', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('verification_changes', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('verification_changes', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('users', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('users', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('user_groups', 'id',
               existing_type=sa.SmallInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('trays', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('trays', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('trays', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('trays_id_seq'::regclass)"))
    op.alter_column('tray_withdrawals', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('tray_withdrawals', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('tray_withdrawals', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('subcollections', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('subcollections', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('subcollections', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('subcollections_id_seq'::regclass)"))
    op.alter_column('size_class', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('size_class', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('sides', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('sides', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('side_orientations', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('side_orientations', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('side_orientations', 'id',
               existing_type=sa.SmallInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('side_orientations_id_seq'::regclass)"))
    op.alter_column('shelving_jobs', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('shelving_jobs', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('shelving_jobs', 'last_transition',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('shelving_job_discrepancies', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('shelving_job_discrepancies', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('shelving_job_discrepancies', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('shelves', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('shelves', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('shelves', 'sort_priority',
               existing_type=sa.SmallInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('shelves', 'available_space',
               existing_type=sa.SmallInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('shelf_types', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('shelf_types', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('shelf_types', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('shelf_types_id_seq'::regclass)"))
    op.alter_column('shelf_positions', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('shelf_positions', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('shelf_position_numbers', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('shelf_position_numbers', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('shelf_numbers', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('shelf_numbers', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('requests', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('requests', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('request_types', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('request_types', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('refile_non_tray_items', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('refile_non_tray_items', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('refile_non_tray_items', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('refile_jobs', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('refile_jobs', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('refile_jobs', 'last_transition',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('refile_items', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('refile_items', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('refile_items', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('priorities', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('priorities', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('pick_lists', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('pick_lists', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('pick_lists', 'last_transition',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('permissions', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('permissions', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('owners', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('owners', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('owner_tiers', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('owner_tiers', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('owner_tiers', 'level',
               existing_type=sa.SmallInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('non_tray_items_retrieval_events', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('non_tray_items_retrieval_events', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('non_tray_items_retrieval_events', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('non_tray_items', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('non_tray_items', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('non_tray_items', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('non_tray_items_id_seq'::regclass)"))
    op.alter_column('non_tray_item_withdrawals', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('non_tray_item_withdrawals', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('non_tray_item_withdrawals', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('modules', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('modules', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('media_types', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('media_types', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('ladders', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('ladders', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('ladders', 'sort_priority',
               existing_type=sa.SmallInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('ladder_numbers', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('ladder_numbers', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('items_retrieval_events', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('items_retrieval_events', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('items_retrieval_events', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('items', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('items', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('items', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('items_id_seq'::regclass)"))
    op.alter_column('item_withdrawals', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('item_withdrawals', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('item_withdrawals', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('groups', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('groups', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('groups', 'id',
               existing_type=sa.SmallInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('groups_id_seq'::regclass)"))
    op.alter_column('group_permissions', 'id',
               existing_type=sa.SmallInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('delivery_locations', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('delivery_locations', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('conveyance_bins', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('conveyance_bins', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('container_types', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('container_types', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('buildings', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('buildings', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('buildings', 'id',
               existing_type=sa.SmallInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('buildings_id_seq'::regclass)"))
    op.alter_column('batch_uploads', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('batch_uploads', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('batch_uploads', 'file_size',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('batch_uploads', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('batch_uploads_id_seq'::regclass)"))
    op.alter_column('barcodes', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('barcodes', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('barcode_types', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('barcode_types', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('aisles', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('aisles', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('aisles', 'sort_priority',
               existing_type=sa.SmallInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('aisle_numbers', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('aisle_numbers', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('aisle_numbers', 'id',
               existing_type=sa.SmallInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('aisle_numbers_id_seq'::regclass)"))
    op.alter_column('accession_jobs', 'update_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('accession_jobs', 'create_dt',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('accession_jobs', 'last_transition',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('accession_jobs', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('accession_jobs_id_seq'::regclass)"))
    # ### end Alembic commands ###
