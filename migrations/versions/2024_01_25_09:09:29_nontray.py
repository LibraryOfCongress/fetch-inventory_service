"""nontray

Revision ID: 2024_01_25_09:09:29
Revises: 2024_01_23_13:23:03
Create Date: 2024-01-25 08:09:29.814897

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel



# revision identifiers, used by Alembic.
revision: str = '2024_01_25_09:09:29'
down_revision: Union[str, None] = '2024_01_23_13:23:03'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('non_tray_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('barcode_id', sa.dialects.postgresql.UUID(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('tray_size_class_id', sa.Integer(), nullable=True),
    sa.Column('container_type_id', sa.Integer(), nullable=True),
    sa.Column('subcollection_id', sa.Integer(), nullable=True),
    sa.Column('accession_job_id', sa.Integer(), nullable=True),
    sa.Column('verification_job_id', sa.Integer(), nullable=True),
    sa.Column('accession_dt', sa.DateTime(), nullable=True),
    sa.Column('withdrawal_dt', sa.DateTime(), nullable=True),
    sa.Column('media_type_id', sa.Integer(), nullable=True),
    sa.Column('create_dt', sa.DateTime(), nullable=False),
    sa.Column('update_dt', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['accession_job_id'], ['accession_jobs.id'], ),
    sa.ForeignKeyConstraint(['barcode_id'], ['barcodes.id'], ),
    sa.ForeignKeyConstraint(['container_type_id'], ['container_types.id'], ),
    sa.ForeignKeyConstraint(['media_type_id'], ['media_types.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['owners.id'], ),
    sa.ForeignKeyConstraint(['subcollection_id'], ['subcollections.id'], ),
    sa.ForeignKeyConstraint(['tray_size_class_id'], ['tray_size_class.id'], ),
    sa.ForeignKeyConstraint(['verification_job_id'], ['verification_jobs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('items', sa.Column('owner_id', sa.Integer(), nullable=True))
    op.add_column('items', sa.Column('tray_size_class_id', sa.Integer(), nullable=True))
    op.add_column('items', sa.Column('container_type_id', sa.Integer(), nullable=True))
    op.create_foreign_key("fk_items_container_type_id", 'items', 'container_types', ['container_type_id'], ['id'])
    op.create_foreign_key("fk_items_size_class_id", 'items', 'tray_size_class', ['tray_size_class_id'], ['id'])
    op.create_foreign_key("fk_items_owner_id", 'items', 'owners', ['owner_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("fk_items_container_type_id", 'items', type_='foreignkey')
    op.drop_constraint("fk_items_size_class_id", 'items', type_='foreignkey')
    op.drop_constraint("fk_items_owner_id", 'items', type_='foreignkey')
    op.drop_column('items', 'container_type_id')
    op.drop_column('items', 'tray_size_class_id')
    op.drop_column('items', 'owner_id')
    op.drop_table('non_tray_items')
    # ### end Alembic commands ###
