"""add_requests

Revision ID: 2024_05_14_10:09:52
Revises: 2024_04_30_13:41:54
Create Date: 2024-05-14 09:09:52.810880

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel



# revision identifiers, used by Alembic.
revision: str = '2024_05_14_10:09:52'
down_revision: Union[str, None] = '2024_04_30_13:41:54'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('delivery_locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=250), nullable=False),
    sa.Column('create_dt', sa.DateTime(), nullable=False),
    sa.Column('update_dt', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('priorities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('create_dt', sa.DateTime(), nullable=False),
    sa.Column('update_dt', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('value')
    )
    op.create_table('request_types',
    sa.Column('id', sa.SmallInteger(), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('create_dt', sa.DateTime(), nullable=False),
    sa.Column('update_dt', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type')
    )
    op.create_table('requests',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('request_type_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=True),
    sa.Column('non_tray_item_id', sa.Integer(), nullable=True),
    sa.Column('delivery_location_id', sa.Integer(), nullable=False),
    sa.Column('priority_id', sa.Integer(), nullable=True),
    sa.Column('external_request_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('requestor_name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('create_dt', sa.DateTime(), nullable=False),
    sa.Column('update_dt', sa.DateTime(), nullable=False),
    sa.CheckConstraint('(item_id IS NULL AND non_tray_item_id IS NOT NULL) OR (non_tray_item_id IS NULL AND item_id IS NOT NULL)', name='ck_item_xor_non_tray'),
    sa.ForeignKeyConstraint(['delivery_location_id'], ['delivery_locations.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['non_tray_item_id'], ['non_tray_items.id'], ),
    sa.ForeignKeyConstraint(['priority_id'], ['priorities.id'], ),
    sa.ForeignKeyConstraint(['request_type_id'], ['request_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('requests')
    op.drop_table('request_types')
    op.drop_table('priorities')
    op.drop_table('delivery_locations')
    # ### end Alembic commands ###
